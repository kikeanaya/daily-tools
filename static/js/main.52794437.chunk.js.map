{"version":3,"sources":["Components/Menu.js","Components/Calculator.js","Components/Chronometer.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["Menu","react_default","a","createElement","className","react_router_dom","to","math","require","Calculator","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","name","setState","screen","eval","state","slice","_this2","e","target","Component","Chrono","start","startTS","Date","suspended","interval","requestAnimationFrame","tick","stop","cancelAnimationFrame","diff","reset","addZero","n","hundredths","Math","round","getMilliseconds","seconds","getSeconds","minutes","getMinutes","About","App","Components_Menu","react_router","exact","path","render","Components_About","Components_Calculator","Chronometer","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.52794437.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Menu = () => {\n\n    return (\n        <div className=\"menu\">\n            <Link to={`/daily-tools/`}><h3>ABOUT</h3></Link>\n            <Link to={`/daily-tools/calculator`}><h3>CALCULATOR</h3></Link>\n            <Link to={`/daily-tools/chronometer`}><h3>CHRONOMETER</h3></Link>\n            <h3>TIMER</h3>\n            <h3>CALENDAR</h3>\n        </div>\n    )\n}\n\nexport default Menu","import React, { Component } from 'react';\n\nconst math = require('mathjs')\n\n\nclass Calculator extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = { \n            screen: ''\n        }        \n    }\n\n    onClick = name => {\n\n        if (name === \"result\") {\n            this.setState({\n                screen: math.eval(this.state.screen)\n            })\n        }\n        else if (name === \"backspace\"){\n            this.setState({\n                screen: this.state.screen.slice(0, -1)\n            })\n    \n        }\n        else if (name === \"delete\") {\n            this.setState({\n                screen: ''\n            })\n        }\n\n        else {\n            this.setState({\n                screen: this.state.screen + name\n            })\n        }\n    }\n\n    render() {\n        return (\n        <div className=\"calculator\">\n            <div className=\"screen\">\n                <p>{this.state.screen}</p>\n            </div>\n            <div className=\"keypad\">\n                <button name=\"delete\" onClick={e => this.onClick(e.target.name)}>CE</button>\n\n                <button name=\"/\" onClick={e => this.onClick(e.target.name)}>รท</button>\n                <button name=\"*\" onClick={e => this.onClick(e.target.name)}>x</button>\n\n                <button name=\"backspace\" onClick={e => this.onClick(e.target.name)}>C</button>\n\n\n                <button name=\"7\" onClick={e => this.onClick(e.target.name)}>7</button>\n                <button name=\"8\" onClick={e => this.onClick(e.target.name)}>8</button>\n                <button name=\"9\" onClick={e => this.onClick(e.target.name)}>9</button>\n                <button name=\"+\" onClick={e => this.onClick(e.target.name)}>+</button>\n\n                <button name=\"4\" onClick={e => this.onClick(e.target.name)}>4</button>\n                <button name=\"5\" onClick={e => this.onClick(e.target.name)}>5</button>\n                <button name=\"6\" onClick={e => this.onClick(e.target.name)}>6</button>\n                <button name=\"-\" onClick={e => this.onClick(e.target.name)}>-</button>\n\n                <button name=\"1\" onClick={e => this.onClick(e.target.name)}>1</button>\n                <button name=\"2\" onClick={e => this.onClick(e.target.name)}>2</button>\n                <button name=\"3\" onClick={e => this.onClick(e.target.name)}>3</button>                \n                <button name=\".\" onClick={e => this.onClick(e.target.name)}>.</button>\n\n\n\n                <button className=\"big\" name=\"0\" onClick={e => this.onClick(e.target.name)}>0</button>\n                <button className=\"big\"  name=\"result\" onClick={e => this.onClick(e.target.name)}>=</button>\n\n\n            </div>\n        </div>\n        )\n    }\n}\n\nexport default Calculator;","import React, { Component } from 'react';\n\n  class Chrono extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = { \n          startTS: null,\n          diff: null,\n          suspended: 0,\n          interval: null\n        }        \n    }\n\n  start = () => {\n    if (this.state.startTS) {\n      // prevent multi clicks on start\n      return;\n    }\n\n    this.setState({\n      startTS: +new Date() - this.state.suspended,\n      interval: requestAnimationFrame(this.tick),\n      suspended: 0\n    });\n  }\n\n  stop = () => {\n    cancelAnimationFrame(this.state.interval);\n    this.setState({\n      startTS: null,\n      suspended: +this.state.diff\n    });\n  }\n\n  reset = () => {\n    cancelAnimationFrame(this.state.interval);\n    this.setState({\n      startTS: null,\n      diff: null,\n      suspended: 0,\n      interval: null\n    });\n  }\n\n  tick = () => {\n    this.setState({\n      diff: new Date(+new Date() - this.state.startTS),\n      interval: requestAnimationFrame(this.tick)\n    });\n  }\n\n  addZero = (n) => {\n    return n < 10 ? '0' + n : n;\n  }\n\n  render(){\n\n    let diff = this.state.diff;\n    let hundredths = diff ? Math.round(this.state.diff.getMilliseconds()/10) : 0;\n    let seconds = diff ? this.state.diff.getSeconds() : 0;\n    let minutes = diff ? this.state.diff.getMinutes() : 0;\n\n    if (hundredths === 100) hundredths = 0;\n\n    return (\n      <div className=\"chronometer\">\n        <div className=\"chrono-container\">\n          <p className=\"chrono-numbers\">{this.addZero(minutes)}:{this.addZero(seconds)}:{this.addZero(hundredths)}</p>\n          <div className=\"chrono-buttons\">\n            <button className=\"start-button\" onClick={this.start}></button>\n            <button className=\"stop-button\" onClick={this.stop}></button>\n            <button className=\"reset-button\" onClick={this.reset}></button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chrono;","import React from 'react';\n\nconst About = () => {\n\n    return (\n        <div className=\"about\">\n            <h1>About</h1>\n        </div>\n    )\n}\n\nexport default About;","import React from 'react';\nimport Menu from './Components/Menu'\nimport Calculator from './Components/Calculator'\nimport { Switch, Route } from 'react-router-dom'\nimport './App.scss';\nimport Chronometer from './Components/Chronometer';\nimport About from './Components/About';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu/>\n      <Switch>\n        <Route exact path='/daily-tools/' render={() => <About/>}/>\n        <Route exact path='/daily-tools/calculator' render={() => <Calculator/>}/>\n        <Route exact path='/daily-tools/chronometer' render={() => <Chronometer/>}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render((\n    <Router>\n        <App />\n    </Router>\n), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}